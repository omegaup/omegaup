#!/bin/bash -e

PASSWORD=omegaup
CA_NAME="omegaUp Certificate Authority"
HOSTNAME=
IP_ADDR=0
OUTPUT=
OMEGAUP_ROOT=`dirname $0`/..
ROOT=$OMEGAUP_ROOT/ssl

usage() {
	echo "$0 <command> [options]"
	echo -e "\tWhere <command> is one of:"
	echo -e "\t\tinit\tInitializes all keys and certificates"
	echo -e "\t\trunner\tCreates a runner truststore. Requires --hostname and --output"
	echo -e "\tWhere [options] are one or more of:"
	echo -e "\t\t--password\tSets the store password"
	echo -e "\t\t--ca-name\tSets the Certificate Authority name"
	echo -e "\t\t--hostname\tSets the hostname of the runner"
	echo -e "\t\t--output\tSets the output of the jks file"

	exit 1
}

gen_jks() {
	CN=$1
	TARGET=$2
	DIR=`mktemp -d`

	if [ -f $TARGET ]; then rm $TARGET; fi

	/usr/bin/openssl genrsa -out $DIR/runner.key 2048
	if [ $IP_ADDR -eq 1 ]; then
		/usr/bin/openssl req -new -key $DIR/runner.key -out $DIR/runner.csr -config <(
cat <<EOF
[req]
default_bits=2048
prompt=no
default_md=sha1
req_extensions=req_ext
distinguished_name=dn
[dn]
C=MX
CN=$CN
[req_ext]
subjectAltName=IP:$CN
EOF
		)
	else
		/usr/bin/openssl req -new -subj "/C=MX/CN=$CN" -key $DIR/runner.key -out $DIR/runner.csr
	fi

	if [ $IP_ADDR -eq 1 ]; then
		/usr/bin/openssl x509 -req -days 3650 -in $DIR/runner.csr -CA $ROOT/omegaup-ca.crt -CAcreateserial \
			-CAkey $ROOT/omegaup-ca.key -out $DIR/runner.crt -extensions req_ext -extfile <(
cat <<EOF
[req_ext]
subjectAltName=IP:$CN
EOF
		)
	else
		/usr/bin/openssl x509 -req -days 3650 -in $DIR/runner.csr -CA $ROOT/omegaup-ca.crt -CAcreateserial \
			-CAkey $ROOT/omegaup-ca.key -out $DIR/runner.crt
	fi

	/usr/bin/openssl pkcs12 -export -in $DIR/runner.crt -inkey $DIR/runner.key -name "$CN" \
		-certfile $ROOT/omegaup-ca.crt -caname "$CA_NAME" -password "pass:$PASSWORD" -out $DIR/runner.p12
	/usr/bin/keytool -importkeystore -srckeystore $DIR/runner.p12 -srcstoretype pkcs12 \
		-srcstorepass "$PASSWORD" -srcalias "$CN" -destkeystore $TARGET \
		-deststoretype jks -deststorepass "$PASSWORD"
	/usr/bin/keytool -importcert -alias "$CA_NAME" -noprompt -trustcacerts -keystore $TARGET \
		-storepass "$PASSWORD" -file $ROOT/omegaup-ca.crt

	rm -rf $DIR
}

gen_pem() {
	CN=$1
	TARGET=$2
	DIR=`mktemp -d`

	if [ -f $TARGET ]; then rm $TARGET; fi

	/usr/bin/openssl genrsa -out $DIR/frontend.key 2048
	/usr/bin/openssl req -new -subj "/C=MX/CN=$CN" -key $DIR/frontend.key -out $DIR/frontend.csr
	/usr/bin/openssl x509 -req -days 3650 -in $DIR/frontend.csr -CA $ROOT/omegaup-ca.crt -CAcreateserial \
		-CAkey $ROOT/omegaup-ca.key -out $DIR/frontend.crt

	cat $DIR/frontend.key $DIR/frontend.crt $ROOT/omegaup-ca.crt > $TARGET

	rm -rf $DIR
}

gen_ca() {
	if [ -d $ROOT ]; then rm $ROOT/*; else mkdir $ROOT; fi
	/usr/bin/openssl genrsa -out $ROOT/omegaup-ca.key 4096
	/usr/bin/openssl req -new -subj "/C=MX/CN=$CA_NAME" -x509 -days 3650 -key $ROOT/omegaup-ca.key \
		-out $ROOT/omegaup-ca.crt
}

COMMAND=$1
shift || usage

while [[ $# > 1 ]]; do
	KEY=$1
	shift

	case $KEY in
		-p|--password)
			PASSWORD="$1"
			shift || usage
			;;
		-c|--ca-name)
			CA_NAME="$1"
			shift || usage
			;;
		-h|--hostname)
			HOSTNAME="$1"
			IP_ADDR=`echo $HOSTNAME | grep '^[0-9]\+\(\.[0-9]\+\)\{3\}$' | wc -l`
			shift || usage
			;;
		-o|--output)
			OUTPUT="$1"
			shift || usage
			;;
		*)
			usage
			;;
	esac
done

case $COMMAND in
	init)
		gen_ca

		gen_jks localhost $OMEGAUP_ROOT/backend/grader/omegaup.jks
		gen_jks localhost $OMEGAUP_ROOT/backend/runner/omegaup.jks
		gen_pem "omegaup Frontend" $OMEGAUP_ROOT/frontend/omegaup.pem
		;;
	runner)
		if [ \( "$HOSTNAME" == "" \) -o \( "$OUTPUT" == "" \) ] ; then
			usage
		fi
		gen_jks "$HOSTNAME" "$OUTPUT"
		;;
	*)
		usage
		;;
esac
