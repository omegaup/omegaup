name: CI

on: [pull_request]

jobs:
  phpunit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: omegaup
          MYSQL_PASSWORD: omegaup
          MYSQL_DATABASE: omegaup-test

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup gitserver
        run: |
          DOWNLOAD_URL='https://github.com/omegaup/gitserver/releases/download/v1.4.9/omegaup-gitserver.tar.xz'
          curl --location "${DOWNLOAD_URL}" | sudo tar -xJv -C /

          # omegaup-gitserver depends on libinteractive.
          DOWNLOAD_URL='https://github.com/omegaup/libinteractive/releases/download/v2.0.25/libinteractive.jar'
          TARGET='/usr/share/java/libinteractive.jar'
          sudo curl --location "${DOWNLOAD_URL}" -o "${TARGET}"

      - name: Setup Python dependencies
        run: |
          python3 -m pip install --user setuptools
          python3 -m pip install --user wheel
          python3 -m pip install --user mysqlclient

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Setup database
        run: |
          mysql \
            -uroot --skip-password --protocol=TCP \
            -e "CREATE USER 'omegaup'@'localhost' IDENTIFIED BY 'omegaup';"
          python3 stuff/db-migrate.py validate
          python3 stuff/db-migrate.py \
            --username=root --password= --hostname=localhost \
            migrate --databases=omegaup-test

      - name: Validate database schema
        run: |
          python3 stuff/policy-tool.py \
            --username=root --password= --hostname=localhost --database=omegaup-test \
            validate
          python3 stuff/database_schema.py \
            --username=root --password= --hostname=localhost --database=omegaup-test \
            validate --all < /dev/null

      - name: Run tests
        timeout-minutes: 20
        run: ./stuff/mysql_types.sh

      - name: Run Psalm
        run: |
          # Create optional directories to simplify psalm config.
          mkdir -p frontend/www/{phpminiadmin,preguntas}
          touch 'frontend/server/config.php'
          touch 'frontend/tests/test_config.php'
          ./vendor/bin/psalm

      - name: Upload code coverage
        run: bash <(curl -s https://codecov.io/bash)

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-logs
          path: frontend/tests/controllers/*.log

  build-yarn:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install yarn dependencies
        run: yarn install

      - name: Build webpack resources
        run: yarn build

      - name: Run JavaScript tests
        run: yarn test

  selenium:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: omegaup
          MYSQL_USER: omegaup
          MYSQL_PASSWORD: omegaup
          MYSQL_DATABASE: omegaup

      gitserver:
        image: omegaup/dev-gitserver:20200503
        volumes:
          - omegaupdata:/var/lib/omegaup
        ports:
          - 33681:33681

      grader:
        image: omegaup/dev-grader:20200407
        volumes:
          - omegaupdata:/var/lib/omegaup
        ports:
          - 21680:21680

      frontend:
        image: omegaup/dev-php:20200503
        volumes:
          - ${{ github.workspace }}:/opt/omegaup
        ports:
          - 8000:8000
        env:
          CONTINUOUS_INTEGRATION: true

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create files
        run: |
          cat > frontend/server/config.php <<EOF
          <?php
          define('OMEGAUP_ALLOW_PRIVILEGE_SELF_ASSIGNMENT', true);
          define('OMEGAUP_CSP_LOG_FILE', '/tmp/csp.log');
          define('OMEGAUP_DB_HOST', 'mysql');
          define('OMEGAUP_DB_NAME', 'omegaup');
          define('OMEGAUP_DB_PASS', 'omegaup');
          define('OMEGAUP_DB_USER', 'omegaup');
          define('OMEGAUP_ENVIRONMENT', 'development');
          define('OMEGAUP_LOG_FILE', '/tmp/omegaup.log');
          define('OMEGAUP_ENABLE_SOCIAL_MEDIA_RESOURCES', false);
          define('SMARTY_CACHE_DIR', '/tmp');
          define('OMEGAUP_CACERT_URL', '/etc/omegaup/frontend/certificate.pem');
          define('OMEGAUP_SSLCERT_URL', '/etc/omegaup/frontend/certificate.pem');
          define('OMEGAUP_GITSERVER_URL', 'http://gitserver:33861');
          define('OMEGAUP_GRADER_URL', 'https://grader:21680');
          EOF

          cat > ~/.my.cnf <<EOF
          [client]
          port=3306
          protocol=tcp
          host=localhost
          user=root
          password=omegaup
          EOF

      - name: Setup Python dependencies
        run: |
          python3 -m pip install --user setuptools
          python3 -m pip install --user wheel
          python3 -m pip install --user mysqlclient

      - name: Setup database
        run: python3 stuff/db-migrate.py \migrate --databases=omegaup

      - name: Install yarn dependencies
        run: yarn install

      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Build webpack resources
        run: yarn build

      - name: Sauce Connect Proxy Action
        uses: saucelabs/sauce-connect-action@v1.0.0
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: ${{ github.run_id }}

      - name: Run test
        env:
          TRAVIS_JOB_NUMBER: ${{ github.run_id }}
          TRAVIS_BUILD_NUMBER: ${{ github.run_number }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          CONTINUOUS_INTEGRATION: true
        run: |
          python3 -m pytest frontend/tests/ui/ \
            --verbose --capture=no --log-cli-level=INFO --browser=chrome \
            --force-flaky --max-runs=2 --min-passes=1 --numprocesses=4 \
            --url=http://localhost:8000

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install yarn dependencies
        run: yarn install

      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run linters
        run: |
          # Create optional directories to simplify psalm config.
          mkdir -p frontend/www/{phpminiadmin,preguntas}
          touch 'frontend/server/config.php'
          touch 'frontend/tests/test_config.php'

          ./stuff/lint.sh validate --all < /dev/null
