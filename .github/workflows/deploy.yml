name: Deploy

on:
  push:
    branches:
      - main
      - release

jobs:
  deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install yarn dependencies
        run: yarn install

      - name: Build webpack resources
        run: yarn build

      - name: Upload webpack artifacts
        run: |
          mkdir -p build/webpack-artifacts

          # Upload a tarball with the build artifacts.
          TARBALL="build/webpack-artifacts/${{ github.sha }}.tar.xz"
          tar --xz --create --file "${TARBALL}" -C frontend/www js/dist css/dist media/dist
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_BUILD_ARTIFACTS_ACCESS_KEY_ID }} \
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_BUILD_ARTIFACTS_SECRET_ACCESS_KEY }} \
          AWS_REGION=us-east-1 \
            aws s3 cp \
            "${TARBALL}" \
            "s3://omegaup-build-artifacts/webpack-artifacts/${{ github.sha }}.tar.xz"

          case "${{ github.ref }}" in
            refs/heads/release)
              ENVIRONMENT=production
              ;;

            *)
              ENVIRONMENT=staging
              ;;
          esac

          # Start a deployment now that the build artifacts are done.
          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/deployments \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            --data "{\"ref\":\"${{ github.ref }}\",\"required_contexts\":[],\"environment\":\"${ENVIRONMENT}\",\"auto_merge\":false}"

      - name: Build Docker image
        run: |
          USE_BUILDKIT=1 TAG=${{ github.sha }} docker-compose \
            --file docker-compose.k8s.yml \
            build \
            --build-arg="BRANCH=${{ steps.extract_branch.outputs.branch }}" \
            --build-arg="COMMIT=${{ github.sha }}" \
            frontend php nginx

      - name: Push container images to Docker registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | \
              docker login "--username=${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push "omegaup/frontend:${{ github.sha }}"
          docker push "omegaup/php:${{ github.sha }}"
          docker push "omegaup/nginx:${{ github.sha }}"
