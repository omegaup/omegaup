#!/bin/bash

GIT_PUSH=0
EMPTY_HASH=0000000000000000000000000000000000000000
REMOTE_HASH=

if [ $# = 0 ]; then
	ARGS="HEAD"
elif [ $# = 1 ]; then
	ARGS="$1"
else
	read LOCAL_REF LOCAL_HASH REMOTE_REF REMOTE_HASH
	ARGS="$REMOTE_HASH $LOCAL_HASH"
	GIT_PUSH=1
fi

set -e
exec < /dev/tty

confirm () {
	# call with a prompt string or use a default
	read -r -p "${1:-Are you sure? [y/N]} " response
	case $response in
		[yY][eE][sS]|[yY])
			true
			;;
		*)
			false
			;;
	esac
}

OMEGAUP_ROOT=$(/usr/bin/git rev-parse --show-toplevel)

if [ $GIT_PUSH -eq 1 ]; then
	# Fetch the remote in case we don't know the remote ref (e.g. when rebasing
	# from the UI).
	if [ "${REMOTE_HASH}" == "${EMPTY_HASH}" ]; then
		ARGS="--all-files HEAD"
		echo 'New branch. Running validations across all files...'
	elif ! git cat-file -e "${REMOTE_HASH}"; then
		echo $'\e[31mUnknown remote hash ' "\"${REMOTE_HASH}\"" $'.\e[0m You may have missed to run `git pull`.'
		confirm 'Do you still want to push? [y/N]'
		ARGS="--all-files HEAD"
		echo 'Running validations across all files...'
	fi
	if [ "$(/usr/bin/git status --porcelain | grep '^ M' | wc -l)" != "0" ]; then
		confirm $'\e[31mYou have unstaged files.\e[0m Do you still want to push? [y/N]'
	fi
	if [ "$(/usr/bin/git status --porcelain | grep '^\?\?' | wc -l)" != "0" ]; then
		confirm $'\e[35mYou have untracked files.\e[0m Do you still want to push? [y/N]'
	fi
fi

/usr/bin/python3 $OMEGAUP_ROOT/stuff/i18n.py --validate
/usr/bin/python3 $OMEGAUP_ROOT/stuff/whitespace-purge.py validate $ARGS
/usr/bin/python3 $OMEGAUP_ROOT/stuff/php-format.py validate $ARGS
/usr/bin/python3 $OMEGAUP_ROOT/stuff/js-lint.py validate $ARGS
/usr/bin/python3 $OMEGAUP_ROOT/stuff/vue-lint.py validate $ARGS
