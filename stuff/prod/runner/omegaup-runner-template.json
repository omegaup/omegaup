{
    "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "customData": {
            "type": "secureString"
        },
        "instanceCount": {
            "type": "string",
            "defaultValue": "2"
        },
        "autoScaleDefault": {
            "type": "string",
            "defaultValue": "2"
        },
        "autoScaleMin": {
            "type": "string",
            "defaultValue": "2"
        },
        "autoScaleMax": {
            "type": "string",
            "defaultValue": "8"
        }
    },
    "variables": {
        "storageApiVersion": "2019-04-01",
        "namingInfix": "[resourceGroup().name]",
        "virtualNetworkName": "[concat(variables('namingInfix'), '-vnet')]",
        "scaleSetName": "[concat(variables('namingInfix'), '-vmss')]",
        "networkSecurityGroupName": "[concat(variables('namingInfix'), '-nsg')]",
        "autoScaleResourceName": "[concat(variables('namingInfix'), '-autoscale')]",
        "vmssId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('scaleSetName'))]"
    },
    "resources": [
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "172.16.0.0/16"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "prometheus-metrics",
                        "properties": {
                            "priority": 310,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "6060"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2015-04-01",
            "name": "[variables('autoScaleResourceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('scaleSetName'))]"
            ],
            "properties": {
                "name": "[variables('autoScaleResourceName')]",
                "targetResourceUri": "[variables('vmssId')]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": "[parameters('autoScaleMin')]",
                            "maximum": "[parameters('autoScaleMax')]",
                            "default": "[parameters('autoScaleDefault')]"
                        },
                        "rules": [
                            {
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "3",
                                    "cooldown": "PT5M"
                                },
                                "metricTrigger": {
                                    "metricName": "performanceCounters/requestsInQueue",
                                    "metricNamespace": "microsoft.insights/components",
                                    "metricResourceUri": "/subscriptions/9fc6c11d-9406-42f8-9a78-3813ed0875fa/resourceGroups/omegaup-grader/providers/microsoft.insights/components/omegaup-grader",
                                    "operator": "GreaterThan",
                                    "statistic": "Max",
                                    "threshold": 5,
                                    "timeAggregation": "Maximum",
                                    "timeGrain": "PT1M",
                                    "timeWindow": "PT1M",
                                    "dividePerInstance": true
                                }
                            },
                            {
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                },
                                "metricTrigger": {
                                    "metricName": "performanceCounters/requestsInQueue",
                                    "metricNamespace": "microsoft.insights/components",
                                    "metricResourceUri": "/subscriptions/9fc6c11d-9406-42f8-9a78-3813ed0875fa/resourceGroups/omegaup-grader/providers/microsoft.insights/components/omegaup-grader",
                                    "operator": "LessThan",
                                    "statistic": "Max",
                                    "threshold": 1,
                                    "timeAggregation": "Maximum",
                                    "timeGrain": "PT1M",
                                    "timeWindow": "PT5M",
                                    "dividePerInstance": true
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "[variables('scaleSetName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2020-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "sku": {
                "name": "Standard_A1_v2",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('omegaup-runner', 'Microsoft.ManagedIdentity/userAssignedIdentities', 'omegaup-runner')]": {
                    }
                }
            },
            "properties": {
                "overprovision": true,
                "upgradePolicy": {
                    "mode": "Rolling",
                    "rollingUpgradePolicy": {
                        "maxBatchInstancePercent": 20,
                        "maxUnhealthyInstancePercent": 20,
                        "maxUnhealthyUpgradedInstancePercent": 20,
                        "pauseTimeBetweenBatches": "PT2S"
                    }
                },
                "singlePlacementGroup": "false",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            }
                        },
                        "imageReference": {
                            "publisher": "canonical",
                            "offer": "0001-com-ubuntu-server-focal",
                            "sku": "20_04-lts",
                            "version": "latest"
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('namingInfix'), '-nic')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('namingInfix'), '-ipconfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'default')]"
                                                },
                                                "publicIPAddressConfiguration": {
                                                    "name": "[concat(variables('namingInfix'), '-ipconfig-public')]",
                                                    "properties": {
                                                        "idleTimeoutInMinutes": 15,
                                                        "dnsSettings": {
                                                            "domainNameLabel": "omegaup-runner"
                                                        }
                                                    }
                                                },
                                                "applicationGatewayBackendAddressPools": [],
                                                "loadBalancerBackendAddressPools": [],
                                                "loadBalancerInboundNatPools": []
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "HealthExtension",
                                "properties": {
                                    "publisher": "Microsoft.ManagedServices",
                                    "type": "ApplicationHealthLinux",
                                    "typeHandlerVersion": "1.0",
                                    "autoUpgradeMinorVersion": false,
                                    "settings": {
                                        "protocol": "http",
                                        "port": 6060,
                                        "requestPath": "/metrics"
                                    }
                                }
                            },
                            {
                                "name": "KVVMExtensionForLinux",
                                "properties": {
                                    "publisher": "Microsoft.Azure.KeyVault",
                                    "type": "KeyVaultForLinux",
                                    "typeHandlerVersion": "2.0",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "secretsManagementSettings": {
                                            "certificateStoreLocation": "/var/lib/waagent/Microsoft.Azure.KeyVault",
                                            "certificateStoreName": "",
                                            "observedCertificates": [
                                                "https://omegaup-runner-vault.vault.azure.net/secrets/omegaup-runner"
                                            ],
                                            "requireInitialSync": true,
                                            "pollingIntervalInS": "7200"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "priority": "Spot",
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "lhchavez",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/lhchavez/.ssh/authorized_keys",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCnjhoOKyTPYdNViybSdZUobS5WsOuhZnGO3QWQqI8K5+op8gEzBJaV1XfwVMewbBFv1t8NNANBlqbkjAGwrbLVixz156fcnTpVKaXPF7L31UTSv3x3/7gjRkAnNAexVNQOR5uLzEqaC1WLzTZf1iN4VMLskmuEE1PYAR7JBoE7jwKc5w67Iu0aELhiZ2nGSXkNU9fuSA3O/EFRQMtUVY8KvRuCN5iSTuHhL3vm4TE39ZYfSCsPok0PAbnR0eIFObQYkp/EaJZitqALmxr9gFsK5AxlfbbGiOXlUP1et4tA1/6ep3CPCnUy6TNCwKuOdC8kMzHg9tYIl0qtpgibuLU3 lhchavez@lhc-desktop"
                                    }
                                ]
                            }
                        },
                        "customData": "[parameters('customData')]"
                    },
                    "billingProfile": {
                        "maxPrice": -1
                    },
                    "evictionPolicy": "Deallocate"
                },
                "scaleInPolicy": {
                    "rules": [
                        "OldestVM"
                    ]
                },
                "automaticRepairsPolicy": {
                    "enabled": false,
                    "gracePeriod": "PT10M"
                },
                "platformFaultDomainCount": "1"
            },
            "zones": ["1", "2", "3"]
        }
    ]
}
