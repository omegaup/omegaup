apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  00-create-metadata.sql: |
    CREATE DATABASE IF NOT EXISTS `_omegaup_metadata`;
    CREATE DATABASE IF NOT EXISTS `omegaup-test`;
    GRANT ALL PRIVILEGES ON `omegaup-test`.* TO 'omegaup'@'%';
    CREATE USER IF NOT EXISTS 'omegaup'@'localhost' IDENTIFIED BY 'omegaup';
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.0
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: omegaup
        - name: MYSQL_USER
          value: omegaup
        - name: MYSQL_ROOT_PASSWORD
          value: omegaup
        - name: MYSQL_PASSWORD
          value: omegaup
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        emptyDir: {}
      - name: mysql-config
        configMap:
          name: mysql-config
          items:
            - key: 00-create-metadata.sql
              path: 00-create-metadata.sql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  selector:
    app: mysql
  ports:
  - name: http
    protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: batch/v1
kind: Job

metadata:
  name: db-migrate
spec:
  template:
    spec:
      containers:
      - name: db-migrate
        image: omegaup/frontend-dev-sidecar:latest
        imagePullPolicy: IfNotPresent
        command: [
          'bash',
          '-c',
          './stuff/db-migrate.py
            --verbose
            --username=root
            --password=omegaup
            --hostname=mysql-service
            migrate
            --databases=omegaup
            --development-environment &&
          ./stuff/bootstrap-environment.py
            --verbose
            --root-url=http://frontend-service',
        ]
        volumeMounts:
        - name: omegaup
          mountPath: /opt/omegaup
      initContainers:
      - name: init-volume
        image: omegaup/frontend:latest
        imagePullPolicy: IfNotPresent
        command: ['rsync', '-az', '/opt/omegaup/', '/mnt/omegaup/']
        volumeMounts:
        - name: omegaup
          mountPath: /mnt/omegaup
      volumes:
      - name: omegaup
        emptyDir: {}
      restartPolicy: Never
  parallelism: 1
  completions: 1
  backoffLimit: 1
