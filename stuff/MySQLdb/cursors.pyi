from typing import Any, Iterator, Optional, Sequence, Tuple

from . import connections


class BaseCursor(object):
    rowcount: int
    lastrowid: int
    def __init__(self, connection: connections.Connection) -> None: ...
    def __enter__(self) -> 'BaseCursor': ...
    def __exit__(self, *exc_info: Any) -> None: ...
    def __iter__(self) -> Iterator[Any]: ...
    def close(self) -> None: ...
    def execute(self, query: str, args: Optional[Any] = None) -> int: ...
    def executemany(self, query: str, args: Sequence[Any]) -> int: ...
    def fetchone(self) -> Tuple[Any, ...]: ...
    def fetchall(self) -> Sequence[Tuple[Any, ...]]: ...

class DictCursor(BaseCursor):
    pass
