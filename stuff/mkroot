#!/usr/bin/python

import glob
import hashlib
import os
import os.path
import shutil
import sys
import tarfile
import urllib

# Utilities to set up a chroot jail filesystem for minijail.
# * Files are hardlinked instead of copied when possible.
# * Symlinks of files that exist within the chroot at __exit__ are preserved,
#   otherwise they are converted to hard links.
class Chroot:
	def __init__(self, path, mountpoint):
		self.chroot = path
		self.mountpoint = mountpoint
		if not self.mountpoint.endswith('/'):
			self.mountpoint += '/'
		if os.path.exists(path):
			shutil.rmtree(path, True)
		os.mkdir(path)
	
	def __chroot_path(self, path, relative_to=None):
                root = relative_to
                if root is None:
                    root = self.mountpoint
		return self.chroot + path[len(root)-1:]

	def mkdir(self, path, relative_to=None):
		if not os.path.isdir(self.__chroot_path(path, relative_to)):
			os.makedirs(self.__chroot_path(path, relative_to))

	def copyfromhost(self, path, relative_to=None, exclude=[]):
		if '*' in path:
			for p in glob.glob(path):
				self.copyfromhost(p, relative_to, exclude)
			return
		self.mkdir(os.path.dirname(path))
		if os.path.isdir(os.path.realpath(path)):
			for root, dirs, files in os.walk(path):
				if any([root.startswith(e) for e in exclude]): continue
				self.mkdir(root, relative_to)
				for f in files:
					filepath = os.path.join(root, f)
					if os.path.islink(filepath):
						target = os.readlink(filepath)
						abspath = os.path.realpath(os.path.join(os.path.dirname(filepath), target))
						if abspath.startswith(self.mountpoint):
							self.symlink(filepath, target)
						else:
							try:
								os.link(abspath, self.__chroot_path(filepath, relative_to))
							except OSError, e:
								print e, abspath, filepath
					else:
						os.link(os.path.realpath(filepath), self.__chroot_path(filepath, relative_to))
				for d in dirs:
					dirpath = os.path.join(root, d)
					if os.path.islink(dirpath):
						target = os.readlink(dirpath)
						abspath = os.path.realpath(os.path.join(os.path.dirname(dirpath), target))
						if abspath.startswith(self.mountpoint):
							self.symlink(dirpath, target)
						else:
							shutil.copytree(abspath, self.__chroot_path(dirpath, relative_to))
		else:
			os.link(os.path.realpath(path), self.__chroot_path(path, relative_to))
	
	def install(self, path, source):
		self.mkdir(os.path.dirname(path))
		shutil.copy(source, self.__chroot_path(path))

	def symlink(self, path, destination):
		self.mkdir(os.path.dirname(path))
		os.symlink(destination, self.__chroot_path(path))

	def write(self, path, contents):
		self.mkdir(os.path.dirname(path))
		f = open(self.__chroot_path(path), 'w')
		f.write(contents)
		f.close()
	
	def extract(self, archive, sha1, skipprefix, url, exclude=[]):
		if not os.path.exists(archive):
			urllib.urlretrieve(url, archive)
		with open(archive, 'rb') as f:
			assert(sha1 == hashlib.sha1(f.read()).hexdigest())
		with tarfile.open(archive) as tar:
			for member in tar.getmembers():
				path = os.path.normpath(member.name)
				if not path.startswith(skipprefix): continue
				path = self.mountpoint + path[len(skipprefix):]
				if any([path.startswith(e) for e in exclude]): continue
				if member.issym():
					self.symlink(path, member.linkname)
				elif member.isfile():
					self.mkdir(os.path.dirname(path))
					with open(self.__chroot_path(path), 'w') as dst:
						shutil.copyfileobj(tar.extractfile(member), dst, member.size)
					os.chmod(self.__chroot_path(path), member.mode)

	# __enter__ and __exit__ are just provided to support with for clarity of code.
	def __enter__(self):
		return self

	def __exit__(self, type, value, traceback):
		pass

with Chroot('root', '/') as root:
	root.copyfromhost('/usr/lib/locale/locale-archive')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libffi.so.6')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libstdc++.so.6')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libgmp.so.10')
	root.copyfromhost('/etc/localtime')
	root.copyfromhost('/lib/x86_64-linux-gnu/libcap.so.2')
	root.copyfromhost('/lib/x86_64-linux-gnu/libexpat.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libutil.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libm.so.6')
	root.copyfromhost('/lib/x86_64-linux-gnu/libpthread.so.0')
	root.copyfromhost('/lib/x86_64-linux-gnu/libgcc_s.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libtinfo.so.5')
	root.copyfromhost('/lib/x86_64-linux-gnu/libcrypt.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libc.so.6')
	root.copyfromhost('/lib/x86_64-linux-gnu/librt.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libdl.so.2')
	root.copyfromhost('/lib/x86_64-linux-gnu/libz.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libc-2.*.so')
	root.copyfromhost('/lib64/ld-linux-x86-64.so.2')

	root.write('/etc/passwd',
		'root:x:0:0:root:/:/bin/false\n' + \
		'nobody:x:65534:65534:nobody:/nonexistent:/bin/false')

	# Other miscellaneous mountpoints
	root.mkdir('/dev/')
	root.mkdir('/proc/')
	root.mkdir('/tmp/')
	root.mkdir('/home/')
	root.mkdir('/sys/')

	# Mountpoints for libraries
	root.mkdir('/usr/lib/ruby/2.1.0/')
	root.mkdir('/usr/lib/python2.7/')
	root.mkdir('/usr/lib/jvm/')
	root.mkdir('/usr/lib/ghc/')
	root.mkdir('/opt/nodejs/')

	root.symlink('/usr/lib/x86_64-linux-gnu/libruby-2.1.so.2.1', '/usr/lib/ruby/2.1.0/libruby-2.1.so.2.1')
	root.symlink('/usr/bin/node', '/opt/nodejs/bin/node')
	root.symlink('/usr/bin/java', '/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java')
	root.symlink('/usr/bin/ruby', '/usr/lib/ruby/2.1.0/ruby')
	root.symlink('/usr/bin/python', '/usr/lib/python2.7/python')
	root.symlink('/usr/bin/ghc', '/usr/lib/ghc/lib/ghc')

	root.install('/usr/bin/ldwrapper', 'bin/ldwrapper')
	root.install('/usr/bin/karel', 'bin/karel')
	root.install('/lib/libminijailpreload.so', 'bin/libminijailpreload.so')

with Chroot('root-compilers', '/') as root:
	root.copyfromhost('/usr/bin/gcc')
	root.copyfromhost('/usr/bin/g++')
	root.copyfromhost('/usr/bin/as')
	root.copyfromhost('/usr/lib/libopcodes-2.*-system*.so')
	root.copyfromhost('/usr/lib/libbfd-2.*-system*.so')
	root.copyfromhost('/usr/bin/fpc')
	root.copyfromhost('/usr/bin/ld')
	root.copyfromhost('/usr/bin/ld.bfd')
	root.copyfromhost('/usr/bin/ppcx64')

	root.copyfromhost('/usr/lib/gcc/x86_64-linux-gnu/4.9')
	root.symlink('/usr/lib/gcc/x86_64-linux-gnu/ld', '/usr/bin/ld')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libcloog-isl.so.4')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libisl.so.10')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libmpc.so.3')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libmpfr.so.4')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libasan.so.1')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libatomic.so.1')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libgfortran.so.3')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libgomp.so.1')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libquadmath.so.0')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libtsan.so.0')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libm.a')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libm.so')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libc.a')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libc_nonshared.a')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libc.so')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libitm.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2')

	root.copyfromhost('/usr/lib/locale/locale-archive')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libffi.so.6')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libstdc++.so.6')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libgmp.so.10')
	root.copyfromhost('/etc/localtime')
	root.copyfromhost('/lib/x86_64-linux-gnu/libcap.so.2')
	root.copyfromhost('/lib/x86_64-linux-gnu/libutil.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libm.so.6')
	root.copyfromhost('/lib/x86_64-linux-gnu/libpthread.so.0')
	root.copyfromhost('/lib/x86_64-linux-gnu/libgcc_s.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libtinfo.so.5')
	root.copyfromhost('/lib/x86_64-linux-gnu/libcrypt.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libc.so.6')
	root.copyfromhost('/lib/x86_64-linux-gnu/librt.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libdl.so.2')
	root.copyfromhost('/lib/x86_64-linux-gnu/libz.so.1')
	root.copyfromhost('/lib/x86_64-linux-gnu/libc-2.*.so')
	root.copyfromhost('/lib64/ld-linux-x86-64.so.2')

	root.copyfromhost('/usr/lib/x86_64-linux-gnu/crtn.o')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/crti.o')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/crt1.o')

	# For ghc
	root.symlink('/usr/lib/x86_64-linux-gnu/libgmp.so', 'libgmp.so.10')
	root.symlink('/usr/lib/x86_64-linux-gnu/librt.so', '/lib/x86_64-linux-gnu/librt.so.1')
	root.symlink('/usr/lib/x86_64-linux-gnu/libdl.so', '/lib/x86_64-linux-gnu/libdl.so.2')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/libffi.so')

	root.copyfromhost('/usr/lib/fpc/')

	root.copyfromhost('/usr/include/')

	root.write('/etc/passwd',
			'root:x:0:0:root:/:/bin/false\n' + \
	    'nobody:x:65534:65534:nobody:/nonexistent:/bin/false')

	# Mountpoints for libraries
	root.mkdir('/usr/lib/ruby/2.1.0/')
	root.mkdir('/usr/lib/python2.7/')
	root.mkdir('/usr/lib/jvm/')
	root.mkdir('/usr/lib/ghc/')
	root.mkdir('/opt/nodejs/')

	# Miscellaneous mountpoints
	root.mkdir('/dev/')
	root.mkdir('/proc/')
	root.mkdir('/home/')
	root.mkdir('/sys/')

	root.symlink('/usr/lib/x86_64-linux-gnu/libruby-2.1.so.2.1', '/usr/lib/ruby/2.1.0/libruby-2.1.so.2.1')
	root.symlink('/usr/bin/node', '/opt/nodejs/bin/node')
	root.symlink('/usr/bin/javac', '/usr/lib/jvm/java-8-openjdk-amd64/bin/javac')
	root.symlink('/usr/bin/ruby', '/usr/lib/ruby/2.1.0/ruby')
	root.symlink('/usr/bin/python', '/usr/lib/python2.7/python')
	root.symlink('/usr/bin/ghc', '/usr/lib/ghc/lib/ghc')
	root.symlink('/usr/local/lib/x86_64-linux-ghc-7.6.3', '/usr/lib/ghc/x86_64-linux-ghc-7.6.3')
	root.symlink('/tmp', '/home')

	root.install('/usr/bin/ldwrapper', 'bin/ldwrapper')
	root.install('/usr/bin/kcl', 'bin/kcl')
	root.install('/lib/libminijailpreload.so', 'bin/libminijailpreload.so')

with Chroot('root-openjdk', '/usr/lib/jvm/') as root:
	root.copyfromhost('/usr/lib/jvm')

with Chroot('root-nodejs', '/opt/nodejs/') as root:
	root.extract('dist/node-v0.10.24-linux-x64.tar.gz', '423018f6a60b18d0dddf3007c325e0cc8cf55099', 'node-v0.10.24-linux-x64', 'http://nodejs.org/dist/v0.10.24/node-v0.10.24-linux-x64.tar.gz')

with Chroot('root-python', '/usr/lib/python2.7/') as root:
	root.copyfromhost('/usr/lib/python2.7', exclude=['/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/config-x86_64-linux-gnu'])
	root.install('/usr/lib/python2.7/python', '/usr/bin/python')
	root.install('/usr/lib/python2.7/libkarel.py', 'lib/libkarel.py')

with Chroot('root-ruby', '/usr/lib/ruby/') as root:
	root.copyfromhost('/usr/lib/ruby')
	root.copyfromhost('/usr/lib/x86_64-linux-gnu/ruby/', relative_to='/usr/lib/x86_64-linux-gnu/ruby/')
	root.install('/usr/lib/ruby/2.1.0/libruby-2.1.so.2.1', '/usr/lib/x86_64-linux-gnu/libruby-2.1.so.2.1')
	root.install('/usr/lib/ruby/2.1.0/ruby', '/usr/bin/ruby')

with Chroot('root-hs', '/usr/lib/ghc/') as root:
	root.copyfromhost('/usr/lib/ghc')
	root.copyfromhost('/usr/local/lib/x86_64-linux-ghc-7.6.3/', relative_to='/usr/local/lib/')
